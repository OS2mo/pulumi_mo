# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

stages:
  - sync
  - lint
  - test
  - coverage
  - release
  - docs

variables:
  PYTEST_COV_MODULE: pulumi_mo
  PYTEST_COV_FAIL_UNDER: 100

  PRECOMMIT_USE_POETRY: "true"
  # This should match the version in the Dockerfile
  POETRY_VERSION: "2.1.3"

  # This should match the version in the Dockerfile
  PULUMI_VERSION: "3.182.0"

# Conditions
#############
# Global Conditions
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'


include:
  - project: labs/salt-automation
    file:
      - gitlab-ci-templates/common/no-interrupt.v1.yml
      - gitlab-ci-templates/common/conventional-commits.v1.yml
      - gitlab-ci-templates/common/conventional-commits-changelog.v1.yml
      - gitlab-ci-templates/python/pypi-cc.v1.yml
  - project: labs/salt-automation
    file:
      - gitlab-ci-templates/common/pre-commit.v1.yml
      - gitlab-ci-templates/python/pytest-meta.v1.yml
    rules:
      - <<: *if-merge-request
  - project: rammearkitektur/os2mo
    file:
      - gitlab-ci-templates/integration-test-meta.v1.yml
    rules:
      - <<: *if-merge-request


# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
    - <<: *if-default-branch-refs
    - <<: *if-merge-request


Integration-test:
  extends:
    - .integration-test:mo
  before_script:
    - wget https://get.pulumi.com/releases/sdk/pulumi-v${PULUMI_VERSION}-linux-x64.tar.gz -O- | tar -zx --strip-components=1 -C /usr/bin
    - !reference [.integration-test:mo, before_script]
  parallel: 2
  rules:
    - <<: *if-merge-request


Test:
  extends: .pytest
  before_script:
    - wget https://get.pulumi.com/releases/sdk/pulumi-v${PULUMI_VERSION}-linux-x64.tar.gz -O- | tar -zx --strip-components=1 -C /usr/bin
    - !reference [.pytest, before_script]
  variables:
    PYTEST_ADDOPTS: "-m 'not integration_test'"


# These jobs MUST NOT use `needs: [Test]` to allow integration test mix-ins:
Export coverage:
  extends: .export_coverage


Check coverage:
  extends: .check_coverage
