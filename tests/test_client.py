# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
import os
from collections.abc import Iterator
from uuid import UUID

import pytest

from pulumi_mo.autogenerated_graphql_client.client import GraphQLClient
from pulumi_mo.base import create_graphql_client


@pytest.fixture
def mo_url() -> str:
    return os.environ.get("FASTRAMQPI__MO_URL", "http://localhost:5000")


@pytest.fixture
def mo_client_id() -> str:
    return os.environ.get("FASTRAMQPI__CLIENT_ID", "dipex")


@pytest.fixture
def mo_client_secret() -> str:
    return os.environ.get(
        "FASTRAMQPI__CLIENT_SECRET", "603f1c82-d012-4d04-9382-dbe659c533fb"
    )


@pytest.fixture
def mo_auth_server() -> str | None:
    return os.environ.get("FASTRAMQPI__AUTH_SERVER")


@pytest.fixture
def graphql_client(
    mo_url: str, mo_client_id: str, mo_client_secret: str, mo_auth_server: str | None
) -> Iterator[GraphQLClient]:
    graphql_client = create_graphql_client(
        mo_url, mo_client_id, mo_client_secret, mo_auth_server
    )
    with graphql_client as session:
        yield session


@pytest.mark.integration_test
def test_client(
    graphql_client: GraphQLClient,
) -> None:
    result = graphql_client.who_am_i()
    assert isinstance(result.actor.uuid, UUID)
